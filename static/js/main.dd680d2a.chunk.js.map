{"version":3,"sources":["ruducer/index.js","component/App.js","action/index.js","types/index.js","index.js"],"names":["initState","data","loading","error","App","state","itemPerPage","this","props","SecessFullyDataRecive","Check","undefined","location","totalPage","currentPage","lastPage","newArr","slice","numberofPages","i","Math","ceil","length","push","style","textAlign","message","color","map","user","key","id","width","backgroundColor","height","display","margin","padding","boxSizing","alt","src","console","title","body","substr","page","listStyle","boxShadow","cursor","onClick","e","history","pathname","Component","connect","dispatch","type","axios","get","then","res","payload","catch","withRouter","middleware","thunk","logger","store","createStore","action","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"uQACMA,EAAY,CAChBC,KAAM,GACNC,SAAS,EACTC,MAAO,I,gECEHC,E,2MACJC,MAAQ,CACNC,YAAa,I,mFAIbC,KAAKC,MAAMC,0B,+BAYX,IATQ,IAAD,OACDC,OAAsCC,IAA9BJ,KAAKC,MAAMI,SAASP,MAC5BQ,EAAYH,EACd,EAAIH,KAAKF,MAAMC,YACfC,KAAKC,MAAMI,SAASP,MAAMS,YAAcP,KAAKF,MAAMC,YACjDS,EAAWF,EAAYN,KAAKF,MAAMC,YAClCU,EAAST,KAAKC,MAAMP,KAAKgB,MAAMF,EAAUF,GAEzCK,EAAgB,GAEhBC,EAAI,EACRA,GAAKC,KAAKC,KAAKd,KAAKC,MAAMP,KAAKqB,OAASf,KAAKF,MAAMC,aACnDa,IAEAD,EAAcK,KAAKJ,GAErB,OACE,6BACE,wBACEK,MAAO,CACLC,UAAW,WAFf,4BAOClB,KAAKC,MAAML,MAAMuB,QAChB,wBAAIF,MAAO,CAAEG,MAAO,QAAUpB,KAAKC,MAAML,MAAMuB,SAC7CnB,KAAKC,MAAMN,QACb,aAEAc,EAAOY,KAAI,SAAAC,GACT,OACE,yBACEC,IAAKD,EAAKE,GACVP,MAAO,CACLQ,MAAO,IACPC,gBAAiB,YACjBC,OAAQ,QACRC,QAAS,eACTC,OAAQ,YACRC,QAAS,GACTC,UAAW,aACXb,UAAW,WAGb,yBACEc,IAAI,4BACJC,IACE,+BAAwBX,EAAKE,GAA7B,mBACAU,IAGJ,4BAAKZ,EAAKa,OACV,2BAAIb,EAAKc,KAAKC,OAAO,EAAG,IAAxB,WAMN,4BACG1B,EAAcU,KAAI,SAACiB,EAAM1B,GACxB,OACE,wBACEW,IAAKX,EACLY,GAAIc,EACJrB,MAAO,CACLsB,UAAW,OACXX,QAAS,eACTE,QAAS,GACTU,UAAW,mBACXC,OAAQ,UACRZ,OAAQ,SACRH,gBAAiBvB,EACb,GACAmC,IAAS,EAAKrC,MAAMI,SAASP,MAAMS,YACnC,MACA,IAENmC,QAAS,SAAAC,GAAC,OACR,EAAK1C,MAAM2C,QAAQ5B,KAAK,CACtB6B,SAAS,SAAD,OAAWP,GACnBxC,MAAO,CAAES,YAAa+B,OAIzBA,Y,GA9FDQ,aAiHHC,eARS,SAAAjD,GACtB,MAAO,CACLJ,KAAMI,EAAMJ,KACZC,QAASG,EAAMH,QACfC,MAAOE,EAAMF,SAIuB,CAAEM,sBCvGL,WACnC,OAAO,SAAA8C,GACLA,EAdK,CACLC,KCLyB,kBDmBzBC,IACGC,IAAI,8CACJC,MAAK,SAAAC,GACJL,EAAS,CAAEC,KCrBW,iBDqBgBK,QAASD,EAAI3D,UAEpD6D,OAAM,SAAAZ,GACLK,EAfC,CACLC,KCTwB,eDUxBK,QAawBX,UD8FbI,CACbS,YAAW3D,IG5GP4D,G,MAAa,CAACC,IAAOC,MAErBC,EAAQC,aJPS,WAAgC,IAA/B/D,EAA8B,uDAAtBL,EAAWqE,EAAW,uCACpD,OAAQA,EAAOb,MACb,IGTyB,gBHUvB,OAAO,eACFnD,EADL,CAEEH,SAAS,IAEb,IGZwB,eHatB,OAAO,eACFG,EADL,CAEEF,MAAOkE,EAAOR,UAElB,IGlB0B,iBHmBxB,OAAO,eACFxD,EADL,CAEEH,SAAS,EACTD,KAAMoE,EAAOR,UAEjB,QACE,OAAO,eACFxD,MIbwBiE,IAAe,WAAf,EAAmBN,IAEtDO,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJM,SAASC,eAAe,W","file":"static/js/main.dd680d2a.chunk.js","sourcesContent":["import * as type from \"../types/index\";\nconst initState = {\n  data: [],\n  loading: false,\n  error: []\n};\n\nexport const Ruducer = (state = initState, action) => {\n  switch (action.type) {\n    case type.LOADING_STATE:\n      return {\n        ...state,\n        loading: true\n      };\n    case type.LOADED_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case type.LOADED_SUCSESS:\n      return {\n        ...state,\n        loading: false,\n        data: action.payload\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { SecessFullyDataRecive } from \"../action/index\";\n\nclass App extends Component {\n  state = {\n    itemPerPage: 12\n  };\n\n  componentDidMount() {\n    this.props.SecessFullyDataRecive();\n  }\n\n  render() {\n    const Check = this.props.location.state === undefined;\n    const totalPage = Check\n      ? 1 * this.state.itemPerPage\n      : this.props.location.state.currentPage * this.state.itemPerPage;\n    const lastPage = totalPage - this.state.itemPerPage;\n    const newArr = this.props.data.slice(lastPage, totalPage);\n\n    const numberofPages = [];\n    for (\n      var i = 1;\n      i <= Math.ceil(this.props.data.length / this.state.itemPerPage);\n      i++\n    ) {\n      numberofPages.push(i);\n    }\n    return (\n      <div>\n        <h1\n          style={{\n            textAlign: \"center\"\n          }}\n        >\n          Robotic Web Data Feching\n        </h1>\n        {this.props.error.message ? (\n          <h1 style={{ color: \"red\" }}>{this.props.error.message}</h1>\n        ) : this.props.loading ? (\n          \"Loading...\"\n        ) : (\n          newArr.map(user => {\n            return (\n              <div\n                key={user.id}\n                style={{\n                  width: 270,\n                  backgroundColor: \"lightgrey\",\n                  height: \"350px\",\n                  display: \"inline-block\",\n                  margin: \"10px 10px\",\n                  padding: 10,\n                  boxSizing: \"border-box\",\n                  textAlign: \"center\"\n                }}\n              >\n                <img\n                  alt=\"Rebots Are gone to future\"\n                  src={\n                    `https://robohash.org/${user.id}?size=150x150` ||\n                    console.log(`https://robohash.org/${user.id}?size=150x150`)\n                  }\n                />\n                <h4>{user.title}</h4>\n                <p>{user.body.substr(0, 30)}...</p>\n              </div>\n            );\n          })\n        )}\n        {\n          <ul>\n            {numberofPages.map((page, i) => {\n              return (\n                <li\n                  key={i}\n                  id={page}\n                  style={{\n                    listStyle: \"none\",\n                    display: \"inline-block\",\n                    padding: 10,\n                    boxShadow: \"0px 0px 5px grey\",\n                    cursor: \"pointer\",\n                    margin: \"0 auto\",\n                    backgroundColor: Check\n                      ? \"\"\n                      : page === this.props.location.state.currentPage\n                      ? \"red\"\n                      : \"\"\n                  }}\n                  onClick={e =>\n                    this.props.history.push({\n                      pathname: `/page/${page}`,\n                      state: { currentPage: page }\n                    })\n                  }\n                >\n                  {page}\n                </li>\n              );\n            })}\n          </ul>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.data,\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, { SecessFullyDataRecive })(\n  withRouter(App)\n);\n","import * as type from \"../types/index\";\nimport axios from \"axios\";\n\nconst Loading = () => {\n  return {\n    type: type.LOADING_STATE\n  };\n};\n\nconst Error_load = err => {\n  return {\n    type: type.LOADED_ERROR,\n    payload: err\n  };\n};\n\nexport const SecessFullyDataRecive = () => {\n  return dispatch => {\n    dispatch(Loading());\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/posts\")\n      .then(res => {\n        dispatch({ type: type.LOADED_SUCSESS, payload: res.data });\n      })\n      .catch(e => {\n        dispatch(Error_load(e));\n      });\n  };\n};\n","export const LOADING_STATE = \"LOADING_STATE\";\nexport const LOADED_SUCSESS = \"LOADED_SUCSESS\";\nexport const LOADED_ERROR = \"LOADED_ERROR\";\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nimport { Ruducer } from \"./ruducer\";\nimport App from \"./component/App\";\nimport \"./index.css\";\n\nconst middleware = [thunk, logger];\n\nconst store = createStore(Ruducer, applyMiddleware(...middleware));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}